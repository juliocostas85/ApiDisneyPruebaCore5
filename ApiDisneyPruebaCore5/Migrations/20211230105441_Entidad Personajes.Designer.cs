// <auto-generated />
using System;
using ApiDisneyPruebaCore5.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ApiDisneyPruebaCore5.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20211230105441_Entidad Personajes")]
    partial class EntidadPersonajes
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ApiDisneyPruebaCore5.Models.Genero", b =>
                {
                    b.Property<int>("GeneroId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("Imagen")
                        .HasColumnType("image");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GeneroId");

                    b.ToTable("Generos");
                });

            modelBuilder.Entity("ApiDisneyPruebaCore5.Models.PeliculaSerie", b =>
                {
                    b.Property<int>("PeliculaSerieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("GeneroId")
                        .HasColumnType("int");

                    b.Property<byte[]>("Imagen")
                        .HasColumnType("image");

                    b.Property<string>("Titulo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PeliculaSerieId");

                    b.HasIndex("GeneroId");

                    b.ToTable("PeliculasSeries");
                });

            modelBuilder.Entity("ApiDisneyPruebaCore5.Models.Personaje", b =>
                {
                    b.Property<int>("PersonajeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Edad")
                        .HasColumnType("int");

                    b.Property<string>("Historia")
                        .HasColumnType("text");

                    b.Property<byte[]>("Imagen")
                        .HasColumnType("image");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Peso")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("PersonajeId");

                    b.ToTable("Personaje");
                });

            modelBuilder.Entity("PeliculaSeriePersonaje", b =>
                {
                    b.Property<int>("PeliculasSeriesPeliculaSerieId")
                        .HasColumnType("int");

                    b.Property<int>("PersonajesPersonajeId")
                        .HasColumnType("int");

                    b.HasKey("PeliculasSeriesPeliculaSerieId", "PersonajesPersonajeId");

                    b.HasIndex("PersonajesPersonajeId");

                    b.ToTable("PeliculaSeriePersonaje");
                });

            modelBuilder.Entity("ApiDisneyPruebaCore5.Models.PeliculaSerie", b =>
                {
                    b.HasOne("ApiDisneyPruebaCore5.Models.Genero", "FK_Genero")
                        .WithMany("PeliculasSeries")
                        .HasForeignKey("GeneroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FK_Genero");
                });

            modelBuilder.Entity("PeliculaSeriePersonaje", b =>
                {
                    b.HasOne("ApiDisneyPruebaCore5.Models.PeliculaSerie", null)
                        .WithMany()
                        .HasForeignKey("PeliculasSeriesPeliculaSerieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiDisneyPruebaCore5.Models.Personaje", null)
                        .WithMany()
                        .HasForeignKey("PersonajesPersonajeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ApiDisneyPruebaCore5.Models.Genero", b =>
                {
                    b.Navigation("PeliculasSeries");
                });
#pragma warning restore 612, 618
        }
    }
}
